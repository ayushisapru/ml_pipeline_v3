---
# MLflow Postgres Service
apiVersion: v1
kind: Service
metadata:
  name: mlflow-postgres
  labels:
    app.kubernetes.io/name: mlflow-postgres
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.mlflow.postgres.service.port }}
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    app.kubernetes.io/name: mlflow-postgres
    app.kubernetes.io/instance: {{ .Release.Name }}

---
# MLflow Postgres Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow-postgres
  labels:
    app.kubernetes.io/name: mlflow-postgres
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mlflow-postgres
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mlflow-postgres
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: postgres
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.mlflow.postgres.image.repository }}:{{ .Values.mlflow.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.global.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.mlflow.postgres.auth.user }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.mlflow.postgres.auth.password }}"
            - name: POSTGRES_DB
              value: "{{ .Values.mlflow.postgres.auth.database }}"
          resources:
            requests:
              memory: "{{ .Values.mlflow.postgres.resources.requests.memory }}"
              cpu: "{{ .Values.mlflow.postgres.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.mlflow.postgres.resources.limits.memory }}"
              cpu: "{{ .Values.mlflow.postgres.resources.limits.cpu }}"
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "{{ .Values.mlflow.postgres.auth.user }}"
                - -d
                - "{{ .Values.mlflow.postgres.auth.database }}"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - "{{ .Values.mlflow.postgres.auth.user }}"
                - -d
                - "{{ .Values.mlflow.postgres.auth.database }}"
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          resources:
            {{- toYaml .Values.resources.postgres | nindent 12 }}
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: mlflow-postgres-pvc

---
# MinIO Service
apiVersion: v1
kind: Service
metadata:
  name: minio
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.minio.service.apiPort }}
      targetPort: 9000
      protocol: TCP
      name: api
    - port: {{ .Values.minio.service.consolePort }}
      targetPort: 9001
      protocol: TCP
      name: console
  selector:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: {{ .Release.Name }}

---
# MinIO Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: minio
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.minio.image.repository }}:{{ .Values.minio.image.tag }}"
          imagePullPolicy: {{ .Values.global.pullPolicy }}
          ports:
            - name: api
              containerPort: 9000
              protocol: TCP
            - name: console
              containerPort: 9001
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "chart.fullname" . }}-minio-env
          args:
            - server
            - /data
            - --console-address
            - ":9001"
          volumeMounts:
            - name: data
              mountPath: /data
          resources:
            {{- toYaml .Values.resources.minio | nindent 12 }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minio-data-pvc

---
# FastAPI Application Service
apiVersion: v1
kind: Service
metadata:
  name: fastapi-app
  labels:
    app.kubernetes.io/name: fastapi-app
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.fastapi.service.port }}
      targetPort: 8000
      protocol: TCP
      name: fastapi
  selector:
    app.kubernetes.io/name: fastapi-app
    app.kubernetes.io/instance: {{ .Release.Name }}

---
# FastAPI Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-app
  labels:
    app.kubernetes.io/name: fastapi-app
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: fastapi-app
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fastapi-app
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-minio
          image: busybox:1.35
          command:
            - sh
            - -c
            - |
              until nc -z minio 9000; do
                echo "Waiting for MinIO..."
                sleep 2
              done
      containers:
        - name: fastapi
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.fastapi.image.repository }}:{{ .Values.fastapi.image.tag }}"
          imagePullPolicy: {{ .Values.global.pullPolicy }}
          ports:
            - name: fastapi
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: app-code
              mountPath: /code
          resources:
            {{- toYaml .Values.resources.fastapi | nindent 12 }}
      volumes:
        - name: app-code
          emptyDir: {}

---
# MLflow Service
apiVersion: v1
kind: Service
metadata:
  name: mlflow
  labels:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.mlflow.service.port }}
      targetPort: 5000
      protocol: TCP
      name: mlflow
  selector:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/instance: {{ .Release.Name }}

---
# MLflow Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
  labels:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mlflow
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mlflow
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-postgres
          image: postgres:13
          command:
            - sh
            - -c
            - |
              until pg_isready -h mlflow-postgres -p 5432 -U {{ .Values.mlflow.postgres.auth.user }}; do
                echo "Waiting for postgres..."
                sleep 2
              done
        - name: wait-for-minio
          image: busybox:1.35
          command:
            - sh
            - -c
            - |
              until nc -z minio 9000; do
                echo "Waiting for MinIO..."
                sleep 2
              done
      containers:
        - name: mlflow
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.mlflow.image.repository }}:{{ .Values.mlflow.image.tag }}"
          imagePullPolicy: {{ .Values.global.pullPolicy }}
          ports:
            - name: mlflow
              containerPort: 5000
              protocol: TCP
          env:
            - name: MLFLOW_S3_ENDPOINT_URL
              value: "http://minio:{{ .Values.minio.service.apiPort }}"
            - name: MLFLOW_TRACKING_URI
              value: "http://localhost:{{ .Values.mlflow.service.port }}"
            - name: AWS_ACCESS_KEY_ID
              value: "{{ .Values.minio.auth.accessKey }}"
            - name: AWS_SECRET_ACCESS_KEY
              value: "{{ .Values.minio.auth.secretKey }}"
          command:
            - sh
            - -c
            - |
              echo 'Attempting to create MinIO bucket...'
              awslocal --endpoint-url=http://minio:9000 s3 mb s3://mlflow || true
              echo 'Bucket check complete. Starting MLflow server...'
              mlflow server \
                --backend-store-uri postgresql://{{ .Values.mlflow.postgres.auth.user }}:{{ .Values.mlflow.postgres.auth.password }}@mlflow-postgres/{{ .Values.mlflow.postgres.auth.database }} \
                --default-artifact-root s3://mlflow/ \
                --host 0.0.0.0 \
                --port 5000
          resources:
            {{- toYaml .Values.resources.mlflow | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}