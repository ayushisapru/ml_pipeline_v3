---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-data-pvc
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: {{ .Values.minio.storage.size }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-postgres-pvc
  labels:
    app.kubernetes.io/name: mlflow-postgres
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: {{ .Values.mlflow.postgres.storage.size }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: superset-postgres-pvc
  labels:
    app.kubernetes.io/name: superset-postgres
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: {{ .Values.superset.postgres.storage.size }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: superset-home-pvc
  labels:
    app.kubernetes.io/name: superset
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: {{ .Values.superset.storage.size }}

---
# Druid Postgres PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: druid-postgres-pvc
  labels:
    app.kubernetes.io/name: druid-postgres
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: 5Gi

---
# Druid Shared Storage PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: druid-shared-pvc
  labels:
    app.kubernetes.io/name: druid-shared
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: 20Gi

---
# Druid Coordinator PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: druid-coordinator-pvc
  labels:
    app.kubernetes.io/name: druid-coordinator
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: 2Gi

---
# Druid Broker PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: druid-broker-pvc
  labels:
    app.kubernetes.io/name: druid-broker
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: 2Gi

---
# Druid Historical PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: druid-historical-pvc
  labels:
    app.kubernetes.io/name: druid-historical
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: 10Gi

---
# Druid MiddleManager PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: druid-middle-pvc
  labels:
    app.kubernetes.io/name: druid-middlemanager
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: 5Gi

---
# Druid Router PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: druid-router-pvc
  labels:
    app.kubernetes.io/name: druid-router
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: 1Gi