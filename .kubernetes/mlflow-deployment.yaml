apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.36.0 (ae2a39403)
  labels:
    io.kompose.service: mlflow
  name: mlflow
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mlflow
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.36.0 (ae2a39403)
      labels:
        io.kompose.service: mlflow
    spec:
      containers:
        - args:
            - sh
            - -c
            - |
              echo "Waiting for PostgreSQL to be ready...";
              /usr/bin/env python3 -c "
              import sys, socket
              host = 'postgres'
              port = 5432
              s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
              while True:
                  try:
                      s.connect((host, port))
                      s.close()
                      print('PostgreSQL is ready!')
                      break
                  except socket.error:
                      print('Waiting for PostgreSQL...', file=sys.stderr)
                      import time
                      time.sleep(1)
              "
              echo "Initializing MLflow database schema...";
              mlflow db upgrade postgresql://mlflow:mlflow@postgres/mlflow;
              echo "Attempting to create MinIO bucket...";
              awslocal --endpoint-url=http://minio:9000 s3 mb s3://mlflow || true;
              echo "Bucket check complete. Starting MLflow server...";
              mlflow server --backend-store-uri postgresql://mlflow:mlflow@postgres/mlflow --default-artifact-root s3://mlflow/ --host 0.0.0.0 --port 5000
          env:
            - name: AWS_ACCESS_KEY_ID
              value: minioadmin
            - name: AWS_SECRET_ACCESS_KEY
              value: minioadmin
            - name: MLFLOW_S3_ENDPOINT_URL
              value: http://minio:9000
          image: mlflow
          imagePullPolicy: IfNotPresent
          name: mlflow
          resources:
            requests:
              memory: "512Mi"
              cpu: "125m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          ports:
            - containerPort: 5000
              protocol: TCP
      restartPolicy: Always
